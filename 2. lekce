-- OPAKOVÁNÍ ORDER BY
 
 
 
/*Úkol 1: Vypište od všech poskytovatelů zdravotních služeb jméno a typ.
* Záznamy seřaďte podle jména vzestupně.*/
 
SELECT trim(name), hp.provider_type 
FROM healthcare_provider hp 
ORDER BY trim(name) asc

/*Úkol 2: Vypište od všech poskytovatelů zdravotních služeb ID, jméno a typ.
* Záznamy seřaďte primárně podle kódu kraje a sekundárně podle kódu okresu.*/
 
SELECT * 
FROM healthcare_provider hp

SELECT hp.provider_id , name, hp.provider_type, hp.region_code, hp.district_code 
FROM healthcare_provider hp
ORDER BY region_code ASC, hp.district_code asc 
 
/*Úkol 3: Seřaďte na výpisu data z tabulky czechia_district sestupně podle kódu okresu.*/
 
SELECT * 
FROM czechia_district cd 
ORDER BY code DESC 
 
/*Úkol 4: Vypište abacedně pět posledních krajů v ČR.   */
 
SELECT * 
FROM czechia_region cr
ORDER BY name DESC 
LIMIT 5
 
/*Úkol 5: Data z tabulky healthcare_provider vypište seřazena vzestupně dle
typu poskytovatele a sestupně dle jména.*/
 
SELECT * 
FROM healthcare_provider hp
ORDER BY provider_type ASC, name DESC
 
-- CASE EXPRESSION
 
 
/*Úkol 1: Přidejte na výpisu k tabulce healthcare_provider nový sloupec is_from_Prague,
*  který bude obsahovat 1 pro poskytovate z Prahy a 0 pro ty mimo pražské.*/
 
SELECT *
FROM czechia_region cr 
--CZ010

SELECT hp.name, hp.municipality , hp.region_code,
CASE
	WHEN hp.region_code = 'CZ010' THEN 1
	ELSE 0
END AS is_from_Prague
FROM healthcare_provider hp 
ORDER BY hp.region_code 

/* Úkol 2: Upravte dotaz z předchozího příkladu tak,
* aby obsahoval záznamy, které spadají jenom do Prahy. */
 
 select hp.name, hp.municipality , hp.region_code
, case
	WHEN region_code = 'CZ010' THEN 1
	else 0
  end as is_from_Prague
from healthcare_provider as hp
where region_code = 'CZ010'
 
/* Úkol 3: Sestavte dotaz, který na výstupu ukáže název poskytovatele,
* město poskytování služeb, zeměpisnou délku
* a v dynamicky vypočítaném sloupci slovní informaci,
* jak moc na západě se poskytovatel nachází – určete takto čtyři kategorie rozdělení.*/
 
 SELECT name, municipality, longitude
 FROM healthcare_provider hp 
 
 SELECT min(longitude)
 FROM healthcare_provider hp 
 --18.8, 12.17
 --14
 --16
 --18
 --nejvíce na východě
 
 SELECT name, municipality, longitude,
 CASE 
 	WHEN longitude < 14 THEN 'nejvíce na západě'
 	WHEN longitude < 16 THEN 'méně na západě'
 	WHEN longitude < 18 THEN 'méně na východě'
 	ELSE 'nejvíce na východě'
 END AS flag
 FROM healthcare_provider hp 
 --DŮLEŽITÉ JE POŘADÍ - vyhodnocuje se postupně!!!
 
/*Úkol 4: Vypište název a typ poskytovatele a v novém sloupci odlište,
zda jeho typ je Lékárna nebo Výdejna zdravotnických prostředků.*/
 
SELECT name, hp.provider_type,
CASE 
	WHEN hp.provider_type = 'Lékárna' OR hp.provider_type = 'Výdejna zdravotnických prostředků' THEN 1
	ELSE 0
END AS flag
FROM healthcare_provider hp 
 
-- Základní pojmy světa databází pro datové analytiky
 
 
 
 
 
 
 
 
-- WHERE, IN a LIKE a ILIKE
 
-- Úkol 1: Vyberte z tabulky healthcare_provider záznamy o poskytovatelích, kteří mají ve jméně slovo nemocnice.
 
SELECT name
FROM healthcare_provider hp 
WHERE name ILIKE '%nemocnice%'

-- LIKE - rozlišuje velká a malá písmena
-- ILIKE - nerozlišuje velká a malá písmena

-- % jakékoliv znaky
-- _ jeden jakýkoliv znak
 
-- Úkol 2: Vyberte z tabulky healthcare_provider jméno poskytovatelů, kteří v něm mají slovo lékárna. Vytvořte další
-- dynamicky vypsaný sloupec, který bude obsahovat 1, pokud slovem lékárna název začíná. V opačném případě bude ve sloupci 0.
--%

SELECT name,
CASE 
	WHEN name LIKE 'Lékárna%' THEN 1
	ELSE 0
END AS flag
FROM healthcare_provider hp 
WHERE name ILIKE '%lékárna%'

 
-- Úkol 3: Vypište jméno a město poskytovatelů, jejichž název města poskytování má délku čtyři písmena (znaky).
-- _
 
SELECT hp.name,
		hp.municipality
FROM healthcare_provider hp
WHERE hp.municipality  LIKE '____'
 
-- Úkol 4: Vypište jméno, město a okres místa poskytování u těch poskytovatelů, kteří jsou z Brna, Prahy nebo Ostravy
-- nebo z okresů Most nebo Děčín.
 
select * 
FROM czechia_district cd 
ORDER BY name --CZ0421, CZ0425

SELECT *
FROM czechia_region cr --CZ010 Praha

SELECT name, municipality, district_code, region_code
FROM healthcare_provider hp 
WHERE hp.municipality IN('Brno', 'Ostrava') OR hp.region_code ='CZ010' OR hp.district_code IN('CZ0421', 'CZ0425')
 
 
-- Úkol 5: Pomocí vnořeného SELECT vypište kódy krajů pro Jihomoravský a Středočeský kraj z tabulky czechia_region.
-- Ty použijte pro vypsání ID, jména a kraje jen těch vyhovujících poskytovatelů z tabulky healthcare_provider.
 
SELECT code
FROM czechia_region cr WHERE name in('Jihomoravský kraj', 'Středočeský kraj')

SELECT name, hp.provider_id, hp.region_code 
FROM healthcare_provider hp 
WHERE hp.region_code IN (SELECT code
							FROM czechia_region cr 
							WHERE name in('Jihomoravský kraj', 'Středočeský kraj'))
 
-- Úkol 6: Z tabulky czechia_district vypište jenom ty okresy, ve kterých se vyskytuje název města,
-- které má délku čtyři písmena (znaky).
 
SELECT hp.name,
		hp.district_code,
		hp.municipality
FROM healthcare_provider hp
WHERE hp.municipality  LIKE '____'

SELECT * 
FROM czechia_district cd 
WHERE code IN (SELECT DISTINCT hp.district_code 
				FROM healthcare_provider hp
				WHERE hp.municipality  LIKE '____')
							
-- Pohledy (VIEW)
-- Úkol 1: Vytvořte pohled (VIEW) s ID, jménem, městem a okresem místa poskytování u těch poskytovatelů, kteří jsou z Brna,
-- Prahy nebo Ostravy. Pohled pojmenujte v_healthcare_provider_subset.
 
CREATE VIEW v_ondrej_simanek_healthcare_provider_subset AS
SELECT provider_id, name, municipality, district_code
FROM healthcare_provider
WHERE municipality IN ('Brno', 'Ostrava') OR municipality LIKE 'Praha%'

SELECT * FROM v_ondrej_simanek_healthcare_provider_subset
 
-- Úkol 2: Vytvořte dva SELECT nad tímto pohledem. První vybere vše z něj,
--druhý vybere všechny poskytovatele z tabulky healthcare_provider,
-- kteří se nenacházejí v pohledu v_healthcare_provider_subset.
 
SELECT * FROM v_ondrej_simanek_healthcare_provider_subset
 
 
-- Úkol 3: Smažte pohled z databáze.

DROP VIEW IF EXISTS v_ondrej_simanek_healthcare_provider_subset
